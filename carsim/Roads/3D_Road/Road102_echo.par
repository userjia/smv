PARSFILE
! Road shape generator v 2.0
! Vehicle-suspension arrangement: i
! Generated by VehicleSim Lisp on April 10, 2009

TITLE Default data set

! Input File: Roads\3D_Road\Road102.par
! Run was made 15:02 on Feb. 28, 2017

!-----------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION AND MODEL OPTIONS)
!-----------------------------------------------------------------------------------
IPRINT              1 ! Print increment: Output time step = TSTEP*IPRINT
NIMPORT             0 ! CALC -- Number of imported variables
NOUT_ANI_LIVE       0 ! CALC -- Number of variables sent live to RT animators
NOUT_EXPORT         0 ! CALC -- Number of exported output variables
NOUT_WRITE         17 ! CALC -- Number of variables written to ERD/BIN file
OPT_ALL_WRITE       1 ! Write everything to ERD file? 1 -> all, 0 -> only
                      !   specified outputs. Reset outputs whenever this is
                      !   changed.
OPT_BUFFER_WRITE    0 ! Buffer written outputs? 0 -> no, write during run, 1 ->
                      !   use buffer
OPT_ECHO_ALL_PARS   0 ! List all parameters that might be used? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ICS        0 ! Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_WRITE      0 ! Echo written outputs? 0 -> no, 1 -> yes
OPT_ERROR_DIALOG    1 ! Show interactive dialog box if fatal error occurs: 1 ->
                      !   yes (normal use), 0 -> no (for batch runs)
OPT_EVENT_TIME      0 ! Restart clock with new event? 0 -> No, 1 -> Yes
OPT_INIT_CONFIG     1 ! Initialize vehicle pitch, roll, and deflection variables?
                      !   1 -> yes, 0 -> no, start 'as is'
OPT_INIT_ROAD       1 ! Initialize variables for vehicle yaw, Xo, and Yo, to match
                      !   road at station = SSTART? 1 -> yes, 0 -> no, start 'as
                      !   is'
OPT_INIT_SPEED      1 ! Initialize vehicle speed variables? 1 -> yes, 0 -> no,
                      !   start 'as is'
OPT_INT_METHOD      2 ! Numerical integration method (fixed half-step except
                      !   AB-2): 2 -> AM-2; 3 -> AM-3; 4 = AM-4; 0 -> AB-2
                      !   (full-step); 1 = RK-2
OPT_IO_UPDATE       1 ! Communicate import and output variables whenever possible?
                      !   1 -> communicate twice per time step, 0 -> only at
                      !   indicated time step
OPT_LOG_DEBUG       0 ! Save/reopen log file for debugging? 0 -> no, 1 -> yes
OPT_LOG_VERBOSE     2 ! Log file verbosity: 2 -> everything, 0 -> errors only, 1
                      !   -> errors + events
OPT_LOG_WARNINGS    0 ! Write warnings into log file? 0 -> no, 1 -> yes
OPT_PAUSE           0 ! Pause at end of run to keep window open? 0 = no, 1 = yes.
OPT_ROAD            1 ! Which 3D ground model? 1 -> 3D road, 0 -> 3D grid
OPT_ROAD_LOOP       0 ! Is the road/XY-path in a loop? 0 -> no, 1 -> yes
OPT_SORT_WRITE      1 ! Put written outputs in native order? 1 -> native order, 0
                      !   -> as entered
OPT_SSTOP           0 ! Stop when the vehicle reaches SSTOP? 0 (default) -> no
                      !   (use SSTOP only to initialize the direction of travel
                      !   relative to SSTART), -1 -> Run forever until some
                      !   user-defined condition (e.g., events), 1 -> yes, stop
                      !   when SSTOP is reached.
OPT_WRITE           1 ! Write outputs to file or buffer when T > TSTART_WRITE?
                      !   (Update this using events or VS commands.)  1 -> write,
                      !   0 -> don't write (-)
SSTART           -100 ! Location of vehicle on road (station) at start of run (m)
SSTOP        1199.999 ! Head in this direction and stop here if OPT_SSTOP = 1 (m)
TSTART              0 ! Start with the clock set at this time (s)
TSTART_WRITE        0 ! Start writing outputs when this time is reached (s)
TSTEP            0.05 ! Time step for numerical integration (s)
TSTOP      14.4222051 ! Stop when this time is reached (s)

!-----------------------------------------------------------------------------------
! MODEL PARAMETERS
!-----------------------------------------------------------------------------------
SPATH               0 ! Value of station at first point in design path specified
                      !   with YIN_TABLE (m)

!-----------------------------------------------------------------------------------
! TABULAR DATA
!-----------------------------------------------------------------------------------

! GENERIC: Generic table function for use in VS command equations:
! GENERIC(col_var, row_var, dataset_id) where row_var is the variable associated
! with each row in the table, and col_var is the variable associated with each
! column in a 2D table. The dataset_id has the range: 1 - 12. The function output
! can be computed from row variable and column variable. Or, a 1D table can be
! used involving only row variable. Or, a linear coefficient can be multiplied by
! row variable. The value can be transformed by a gain. A calculated value can
! also be given a specified offset.
GENERIC_CONSTANT(1) 0 ! Constant function output (-)
GENERIC_GAIN(1)     1 ! Multiplier for table
GENERIC_OFFSET(1)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(2) 0 ! Constant function output (-)
GENERIC_GAIN(2)     1 ! Multiplier for table
GENERIC_OFFSET(2)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(3) 0 ! Constant function output (-)
GENERIC_GAIN(3)     1 ! Multiplier for table
GENERIC_OFFSET(3)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(4) 0 ! Constant function output (-)
GENERIC_GAIN(4)     1 ! Multiplier for table
GENERIC_OFFSET(4)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(5) 0 ! Constant function output (-)
GENERIC_GAIN(5)     1 ! Multiplier for table
GENERIC_OFFSET(5)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(6) 0 ! Constant function output (-)
GENERIC_GAIN(6)     1 ! Multiplier for table
GENERIC_OFFSET(6)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(7) 0 ! Constant function output (-)
GENERIC_GAIN(7)     1 ! Multiplier for table
GENERIC_OFFSET(7)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(8) 0 ! Constant function output (-)
GENERIC_GAIN(8)     1 ! Multiplier for table
GENERIC_OFFSET(8)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(9) 0 ! Constant function output (-)
GENERIC_GAIN(9)     1 ! Multiplier for table
GENERIC_OFFSET(9)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(10) 0 ! Constant function output (-)
GENERIC_GAIN(10)    1 ! Multiplier for table
GENERIC_OFFSET(10)  0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(11) 0 ! Constant function output (-)
GENERIC_GAIN(11)    1 ! Multiplier for table
GENERIC_OFFSET(11)  0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(12) 0 ! Constant function output (-)
GENERIC_GAIN(12)    1 ! Multiplier for table
GENERIC_OFFSET(12)  0 ! function output offset added to calculated value (after
                      !   gain) (-)

! LTARG: Target lateral offset (+ -> left, - -> right). This offset is combined
! with the path input (X, Y coordinates) to produce a modified target path that
! the driver model attempts to follow by steering the vehicle. The lateral offset
! can be computed from path station. Or, a linear coefficient can be multiplied
! by path station. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
LTARG_CONSTANT      0 ! Constant lateral offset (m)
LTARG_GAIN          1 ! Multiplier for table
LTARG_OFFSET        0 ! lateral offset offset added to calculated value (after
                      !   gain) (m)

! MU_ROAD: Tire/road friction coefficient (MU) as a function of station S and
! lateral position L (L increases to the right when looking back toward station
! 0). Use MU = -1 for original tire data (no scaling). The MU can be computed
! from station and lateral position. Or, a 1D table can be used involving only
! station. The value can be transformed by a gain. A calculated value can also be
! given a specified offset.
MU_ROAD_CONSTANT 0.85 ! Constant MU (-)
MU_ROAD_GAIN        1 ! Multiplier for table
MU_ROAD_OFFSET      0 ! MU offset added to calculated value (after gain) (-)

! ROAD_DZ: Road elevation relative to reference line as a function of station S
! and lateral position L (L increases to the right when looking back toward
! station 0). The dZ can be computed from station and lateral position. Or, a 1D
! table can be used involving only station. Or, a linear coefficient can be
! multiplied by station. The value can be transformed by a gain. A calculated
! value can also be given a specified offset.
ROAD_DZ_CONSTANT(1) 0 ! Constant dZ (m)
ROAD_DZ_GAIN(1)     1 ! Multiplier for table
ROAD_DZ_OFFSET(1)   0 ! dZ offset added to calculated value (after gain) (m)
ROAD_DZ_CONSTANT(2) 0 ! Constant dZ (m)
ROAD_DZ_GAIN(2)     1 ! Multiplier for table
ROAD_DZ_OFFSET(2)   0 ! dZ offset added to calculated value (after gain) (m)

! ROAD_ZS: Road elevation at reference line. The elevation can be computed from
! station. Or, a linear coefficient can be multiplied by station. If tabular, the
! value can be transformed by a gain. A calculated value can also be given a
! specified offset.
ROAD_ZS_CONSTANT    0 ! Constant elevation (m)
ROAD_ZS_GAIN        1 ! Multiplier for table
ROAD_ZS_OFFSET      0 ! elevation offset added to calculated value (after gain)
                      !   (m)

! Design path that defines horizontal road geometry.
! Column 1 = input X coordinates, column 2 = input Y coordinates,
! column 3 = calculated station S. All units are m
YIN_TABLE ! special table with column 3 calculated
                0,                 0,                 0
               50,                 0,                50
              100,                 0,               100
ENDTABLE


!-----------------------------------------------------------------------------------
! EVENTS
!-----------------------------------------------------------------------------------
! There were no DEFINE_EVENT commands.

END
